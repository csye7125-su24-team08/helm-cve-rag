---
# Source: helm-cve-rag/templates/pdb.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: webapp-pdb
  namespace: chatbot
  labels:
    release: cve-rage
spec:
  minAvailable: 2
  maxUnavailable: 
  selector:
    matchLabels:
      app: webapp
      release: cve-rage
---
# Source: helm-cve-rag/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: webapp-sa
  namespace: chatbot
  labels:
    release: cve-rage
---
# Source: helm-cve-rag/templates/db_secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: webapp-db-secrets
  namespace: chatbot
type: Opaque 
data:
  flyway_password: S1FlUDhYQVNCVktk
  openai_api_key: c2stcHJvai05X05rVnJjWV9KOC1ZMmh6RmZrM1E5b0pmYVFmcGdiZy1xLUkzbHdUUmd1alR4NVhjY0c1ZnZNMkpDVDNCbGJrRkpaMG5rbkhRU21tMW83NDFuUjhuVFhoSFI5MGlxZHNaNGFtSVUyWG9oV1pzTUgwalNyWlh5dERWbGtBCg==
---
# Source: helm-cve-rag/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: webapp-pull-secrets
  namespace: chatbot
type: kubernetes.io/dockerconfigjson
data:
  .dockerconfigjson: eyJhdXRocyI6eyJodHRwczovL2luZGV4LmRvY2tlci5pby92MS8iOnsidXNlcm5hbWUiOiJkb25ncmVwIiwicGFzc3dvcmQiOiJkY2tyX3BhdF83THFJSjcxSWpZVXNyMTJkRXhZdk12dU9aeXMiLCJhdXRoIjoiWkc5dVozSmxjRHBrWTJ0eVgzQmhkRjgzVEhGSlNqY3hTV3BaVlhOeU1USmtSWGhaZGsxMmRVOWFlWE09In19fQ==
---
# Source: helm-cve-rag/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: webapp-configmap
  namespace: chatbot
data:
  host: webapp-postgresql.cve-consumer.svc.cluster.local 
  db_port: "5432"
  db: cve
  flyway_url: jdbc:postgresql://webapp-postgresql.cve-consumer.svc.cluster.local:5432/cve
  flyway_user: piyush
  flyway_schema: cve
  api_url: http://localhost:8080
---
# Source: helm-cve-rag/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: chatbot-service
spec:
  selector:
    app: chatbot-ui 
  ports:
    - protocol: TCP
      port: 8051
      targetPort: 8051
---
# Source: helm-cve-rag/templates/deployments.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: webapp
  namespace: chatbot
spec:
  selector:
    matchLabels:
      app: webapp
  replicas: 3
  template:
    metadata:
      labels:
        app: webapp 
    spec:
      serviceAccountName: webapp-sa
      automountServiceAccountToken: false
      restartPolicy: Always
      
      containers:
      - name: cve-rag-api
        image: dongrep/cve-rag-api:latest
        imagePullPolicy: Always
        readinessProbe:
          httpGet:
            path: /ready
            port: 8080
          initialDelaySeconds: 15
          periodSeconds: 10
          failureThreshold: 3
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 5
          failureThreshold: 2

        env:
          - name: HOST
            valueFrom:
              configMapKeyRef:
                name: webapp-configmap
                key: host
            valueFrom:
              configMapKeyRef:
                name: webapp-configmap
                key: flyway_user
          - name: PWD
            valueFrom:
              secretKeyRef:
                name: webapp-db-secrets
                key: flyway_password
          - name: DB
            valueFrom:
              configMapKeyRef:
                name: webapp-configmap
                key: db
          - name: PORT
            valueFrom:
              configMapKeyRef:
                name: webapp-configmap
                key: db_port
          - name: OPENAI_API_KEY
            valueFrom:
              secretKeyRef:
                name: webapp-db-secrets
                key: openai_api_key

        resources:
          requests:
            cpu: 5m 
            memory: 50Mi
          limits:
            cpu: 20m
            memory: 200Mi


      - name: chatbot-ui
        image: dongrep/cve-rag-ui:latest
        imagePullPolicy: Always
        labels:
          app: chatbot-ui
        readinessProbe:
          httpGet:
            path: /ready
            port: 8080
          initialDelaySeconds: 15
          periodSeconds: 10
          failureThreshold: 3
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 5
          failureThreshold: 2

        env:
          - name: API_URL
            valueFrom:
              configMapKeyRef:
                name: webapp-configmap
                key: API_URL

        resources:
          requests:
            cpu: 5m 
            memory: 50Mi
          limits:
            cpu: 20m
            memory: 200Mi



      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchLabels:
                  app: webapp 
              topologyKey: topology.kubernetes.io/zone

      imagePullSecrets:
      - name: webapp-pull-secrets
---
# Source: helm-cve-rag/templates/hpa.yaml
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: webapp-hpa
  namespace: chatbot
  labels:
    release: cve-rage
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: webapp
  minReplicas: 2
  maxReplicas: 4
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 80
---
# Source: helm-cve-rag/templates/role.yaml
# apiVersion: rbac.authorization.k8s.io/v1
# kind: Role
# metadata:
#   namespace: chatbot
#   name: webapp-role
#   labels:
#     release: cve-rage
# rules:
# - apiGroups: [""]
#   resources: ["pods"]
#   verbs: ["get", "list", "watch"]
---
# Source: helm-cve-rag/templates/rolebinding.yaml
# apiVersion: rbac.authorization.k8s.io/v1
# kind: RoleBinding
# metadata:
#   name: webapp-rolebinding
#   namespace: chatbot
#   labels:
#     release: cve-rage
# subjects:
# - kind: ServiceAccount
#   name: webapp-sa
#   namespace: chatbot
# roleRef:
#   kind: Role
#   name: webapp-role
#   apiGroup: rbac.authorization.k8s.io
---
# Source: helm-cve-rag/templates/gateway.yaml
apiVersion: networking.istio.io/v1beta1
kind: Gateway
metadata:
  name: chatbot-gateway
  namespace: monitoring
spec:
  selector:
    istio: gateway # Use Istioâ€™s default ingress gateway
  servers:
  - port:
      number: 80
      name: http
      protocol: HTTP
    hosts:
    - "chatbot.dev.clustering.ninja" # Replace with your domain
  - port:
      number: 443
      name: https
      protocol: HTTPS
    hosts:
    - "chatbot.dev.clustering.ninja" # Replace with your domain
    tls:
      mode: SIMPLE
      credentialName: chatbot-cert
      privateKey: /etc/istio/ingressgateway-certs/tls.key
      serverCertificate: /etc/istio/ingressgateway-certs/tls.crt
---
# Source: helm-cve-rag/templates/virtualservice.yaml
apiVersion: networking.istio.io/v1beta1
kind: VirtualService
metadata:
  name: chatbot-virtualservice
  namespace: monitoring
spec:
  hosts:
    - "chatbot.dev.clustering.ninja"
  gateways:
    - chatbot-gateway
  http:
    - match:
      route:
        - destination:
            host: chatbot-service
            port:
              number: 80
